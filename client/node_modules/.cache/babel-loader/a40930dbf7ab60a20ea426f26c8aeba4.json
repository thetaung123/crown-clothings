{"ast":null,"code":"import _defineProperty from \"/home/maxwell/Desktop/crown-clothings/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/maxwell/Desktop/crown-clothings/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/maxwell/Desktop/crown-clothings/client/src/components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport FormInput from \"../formInput/formInput.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { connect } from 'react-redux';\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  //using hooks\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        useCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const displayName = useCredentials.displayName,\n        email = useCredentials.email,\n        password = useCredentials.password,\n        confirmPassword = useCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n    setCredentials({\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    }); // to clear our form\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setCredentials(_objectSpread({}, useCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","displayName","email","password","confirmPassword","useCredentials","setCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport FormInput from \"../formInput/formInput.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport { connect } from 'react-redux';\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nimport './sign-up.styles.scss';\n\nconst SignUp = ({ signUpStart }) => { //using hooks\n    const [useCredentials, setCredentials] = useState({displayName: '', email: '', password: '', confirmPassword: ''});\n    const {displayName, email, password, confirmPassword } = useCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        if(password !== confirmPassword){\n            alert(`passwords don't match`);\n            return;\n        }\n\n        signUpStart({displayName, email, password});\n\n        setCredentials({\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }); // to clear our form\n\n    };\n\n    const handleChange = event => {\n        const { name, value} =event.target;\n\n        setCredentials({...useCredentials, [name]: value})\n    };\n\n    return(\n        <div className='sign-up' >\n            <h2 className='title'>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput\n                type='text'\n                name='displayName'\n                value={displayName}\n                onChange={handleChange}\n                label='Display Name'\n                required\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='Email'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='Password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='Confirm Password'\n                    required\n                />\n                <CustomButton type='submit'>Sign Up</CustomButton>\n            </form>\n        </div>\n    )\n};\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}