{"ast":null,"code":"var _jsxFileName = \"/home/maxwell/Desktop/crown-clothings/src/pages/collection/collection.component.jsx\";\nimport React from 'react';\nimport './collection.styles.scss';\nimport { connect } from 'react-redux';\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\nimport CollectionItem from \"../../components/collection-item/collection-item.components\";\n\nconst CollectionPage = ({\n  collection\n}) => {\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(\"div\", {\n    className: \"category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" \", title, \" \"), React.createElement(\"div\", {\n    className: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  //ownProps is second optional parameter which value is the same as this.props //and remember Route always passes in match props\n  collection: selectCollection(ownProps.match.params.collectionId)(state) //now we need to pass in 2 parameters // state is as usual because we didn't use createStructuredSelector // the first parameter is for the first function the selector run i.e the function that receives collectionUrlParam\n\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/pages/collection/collection.component.jsx"],"names":["React","connect","selectCollection","CollectionItem","CollectionPage","collection","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,cAAP,MAA2B,6DAA3B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA,QAC/BC,KAD+B,GACdD,UADc,CAC/BC,KAD+B;AAAA,QACxBC,KADwB,GACdF,UADc,CACxBE,KADwB;AAEvC,SACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAwBD,KAAxB,MADJ,EAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAFR,CAFJ,CADA;AAUH,CAZD;;AAcA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAAE;AAC5CR,EAAAA,UAAU,EAAEH,gBAAgB,CAACW,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD,CAD8B,CAC8B;;AAD9B,CAAtB,CAAxB;;AAIA,eAAeX,OAAO,CAACU,eAAD,CAAP,CAAyBP,cAAzB,CAAf","sourcesContent":["import React from 'react';\nimport './collection.styles.scss'\n\nimport { connect } from 'react-redux';\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\nimport CollectionItem from \"../../components/collection-item/collection-item.components\";\n\nconst CollectionPage = ({ collection }) => {\n    const { title, items } = collection;\n    return(\n    <div className='category'>\n        <h2 className='title'> {title} </h2>\n        <div className='items'>\n            {\n                items.map(item => <CollectionItem key={item.id} item={item}/>)\n            }\n        </div>\n    </div>\n    )\n};\n\nconst mapStateToProps = (state, ownProps) => ({ //ownProps is second optional parameter which value is the same as this.props //and remember Route always passes in match props\n    collection: selectCollection(ownProps.match.params.collectionId)(state) //now we need to pass in 2 parameters // state is as usual because we didn't use createStructuredSelector // the first parameter is for the first function the selector run i.e the function that receives collectionUrlParam\n});\n\nexport default connect(mapStateToProps)(CollectionPage);"]},"metadata":{},"sourceType":"module"}