{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; //import thunk from \"redux-thunk\"; //for handling async requests\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"./root-saga\";\nimport rootReducer from './root-reducer';\nconst sagaMiddleware = createSagaMiddleware(); // const middlewares = [thunk]; //using thunk\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  //to hide the middleware in production //environmental variable node set up which only has 3 possible values ('development', 'production', and 'test')\n  middlewares.push(logger); //when we do npm run build it changes into 'production'\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); //*** it has to be here // after creating store\n//sagaMiddleware.run(fetchCollectionsStart); //every sagas we want to run in components also has to go through here // this is not the same as the function we wrote in shop.actions file// it was for using inside components\n//instead of doing like above\n\nsagaMiddleware.run(rootSaga); //this contains every sagas we want to run\n\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootSaga","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CAEA;;AACA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AAAE;AACzCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB,EADuC,CACC;AAC3C;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CACP;AACA;AACA;;AACAD,cAAc,CAACO,GAAf,CAAmBT,QAAnB,E,CAA8B;;AAG9B,OAAO,MAAMU,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware} from \"redux\";\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\n//import thunk from \"redux-thunk\"; //for handling async requests\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootSaga from \"./root-saga\";\nimport rootReducer from './root-reducer';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// const middlewares = [thunk]; //using thunk\nconst middlewares = [sagaMiddleware];\n\nif(process.env.NODE_ENV === 'development') { //to hide the middleware in production //environmental variable node set up which only has 3 possible values ('development', 'production', and 'test')\n    middlewares.push(logger);               //when we do npm run build it changes into 'production'\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n//*** it has to be here // after creating store\n//sagaMiddleware.run(fetchCollectionsStart); //every sagas we want to run in components also has to go through here // this is not the same as the function we wrote in shop.actions file// it was for using inside components\n//instead of doing like above\nsagaMiddleware.run(rootSaga); //this contains every sagas we want to run\n\n\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}