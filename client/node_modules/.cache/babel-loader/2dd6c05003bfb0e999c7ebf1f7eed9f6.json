{"ast":null,"code":"import _defineProperty from \"/home/maxwell/Desktop/crown-clothings/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/maxwell/Desktop/crown-clothings/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/maxwell/Desktop/crown-clothings/client/src/components/signin/sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from \"../formInput/formInput.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\n\nconst SignIn = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  //using hooks\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        useCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = useCredentials.email,\n        password = useCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name; //if email, name=email and value = event.target.value\n\n    setCredentials(_objectSpread({}, useCredentials, {\n      [name]: value\n    })); //to be able to use variable as object property //we need to spread in other props because we're only changing one props\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email //setting the value as the state//whenever you input the value it'll update the state\n    ,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Sign In \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Sign In With Google\"), \" \")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/client/src/components/signin/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","useCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nimport { connect } from 'react-redux'\nimport './sign-in.styles.scss'\nimport FormInput from \"../formInput/formInput.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\n\nconst SignIn = ({googleSignInStart, emailSignInStart}) => { //using hooks\n    const [useCredentials, setCredentials] = useState({email: '', password: ''});\n    const {email, password} = useCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        emailSignInStart(email, password)\n    };\n\n    const handleChange = event => {\n        const {value,name} = event.target; //if email, name=email and value = event.target.value\n\n        setCredentials({...useCredentials, [name]: value}); //to be able to use variable as object property //we need to spread in other props because we're only changing one props\n    };\n\n\n    return(\n        <div className='sign-in'>\n            <h2 className='title'>I already have an account</h2>\n            <span>Sign in with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                       name='email'\n                       type='email'\n                       value={email} //setting the value as the state//whenever you input the value it'll update the state\n                       handleChange={handleChange}\n                       label='Email'\n                       required />\n                <FormInput\n                    name='password'\n                    type='password'\n                    value={password}\n                    handleChange={handleChange}\n                    label='Password'\n                    required />\n                <div className='buttons'>\n                    <CustomButton type='submit'>Sign In </CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign In With Google</CustomButton> {/*if we didn't specify type=button everything we click that button form submit will occur*/}\n                </div>\n            </form>\n        </div>\n    )\n};\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email,password) => dispatch(emailSignInStart({email, password}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}