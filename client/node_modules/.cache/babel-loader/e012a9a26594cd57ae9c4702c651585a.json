{"ast":null,"code":"var _jsxFileName = \"/home/maxwell/Desktop/crown-clothings/src/components/checkout-item/checkout-item.component.jsx\";\nimport React from 'react';\nimport './checkout-item.styles.scss';\nimport { connect } from 'react-redux';\nimport { clearItemFromCart } from \"../../redux/cart/cart.actions\";\n\nconst CheckoutItem = ({\n  cartItem,\n  clearItem\n}) => {\n  const name = cartItem.name,\n        imageUrl = cartItem.imageUrl,\n        price = cartItem.price,\n        quantity = cartItem.quantity;\n  return React.createElement(\"div\", {\n    className: \"checkout-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, quantity), React.createElement(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, price), React.createElement(\"div\", {\n    className: \"remove-button\",\n    onClick: () => clearItem(cartItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"\\u2715\"), \"  \");\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/components/checkout-item/checkout-item.component.jsx"],"names":["React","connect","clearItemFromCart","CheckoutItem","cartItem","clearItem","name","imageUrl","price","quantity","mapDispatchToProps","dispatch","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAD,KAA0B;AAAA,QACpCC,IADoC,GACDF,QADC,CACpCE,IADoC;AAAA,QAC9BC,QAD8B,GACDH,QADC,CAC9BG,QAD8B;AAAA,QACpBC,KADoB,GACDJ,QADC,CACpBI,KADoB;AAAA,QACbC,QADa,GACDL,QADC,CACbK,QADa;AAE7C,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEF,QAAV;AAAoB,IAAA,GAAG,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAIQ;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBD,IAAxB,CAJR,EAKQ;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACWG,QADX,CALR,EAQQ;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,KAAzB,CARR,EASI;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAE,MAAMH,SAAS,CAACD,QAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,OADJ;AAaD,CAfD;;AAiBA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACpCN,EAAAA,SAAS,EAAEO,IAAI,IAAID,QAAQ,CAACT,iBAAiB,CAACU,IAAD,CAAlB;AADS,CAAL,CAAnC;;AAIA,eAAeX,OAAO,CAAC,IAAD,EAAMS,kBAAN,CAAP,CAAiCP,YAAjC,CAAf","sourcesContent":["import React from 'react';\nimport './checkout-item.styles.scss';\n\nimport { connect } from 'react-redux';\nimport { clearItemFromCart } from \"../../redux/cart/cart.actions\";\n\nconst CheckoutItem = ({cartItem,clearItem}) => {\n    const {name, imageUrl, price, quantity} = cartItem;\n  return(\n      <div className=\"checkout-item\">\n          <div className=\"image-container\">\n              <img src={imageUrl} alt='item'  />\n          </div>\n              <span className=\"name\">{name}</span>\n              <span className=\"quantity\">\n                        {quantity}\n              </span>\n              <span className=\"price\">{price}</span>\n          <div className=\"remove-button\" onClick={() => clearItem(cartItem)}>&#10005;</div>  {/*UTF-8 wingdings*/}\n      </div>\n  )\n};\n\nconst mapDispatchToProps = dispatch => ({\n    clearItem: item => dispatch(clearItemFromCart(item))\n});\n\nexport default connect(null,mapDispatchToProps)(CheckoutItem);"]},"metadata":{},"sourceType":"module"}