{"ast":null,"code":"import _defineProperty from \"/home/maxwell/Desktop/crown-clothings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from \"./user.actions\";\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user; //this will return an obj // but we only want the user property of it/\n\n\n    const userRef = yield call(createUserProfileDocument, user); //again, this is the same as >> const userRef = yield creatUserProfileDocument(user)\n\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {} catch (error) {}\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_START);\n}\nexport function* userSagas() {\n  //collection of all the userSagas to put in root-saga\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","onGoogleSignInStart","GOOGLE_SIGN_START","onEmailSignInStart","EMAIL_SIGN_START","userSagas"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAA+D,+BAA/D;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAgG,gBAAhG;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAG;AAAA,iBACgB,MAAMP,IAAI,CAACQ,eAAL,CAAqBP,cAArB,CADtB;AAAA,UACQQ,IADR,QACQA,IADR,EAC4D;;;AAC3D,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B,CAFD,CAE8D;;AAC7D,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,mBAAmB;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAAnB,OAA0BF,YAAY,CAACG,IAAb,EAA1B,EAApB,CAAT;AACH,GALD,CAKC,OAAOC,KAAP,EAAc;AACX,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAA0D;AAC7D,MAAI,CAEH,CAFD,CAEC,OAAOJ,KAAP,EAAc,CAAE;AACpB;AAED,OAAO,UAAUK,mBAAV,GAAgC;AACnC,QAAMzB,UAAU,CAACI,eAAe,CAACsB,iBAAjB,EAAoCd,gBAApC,CAAhB;AACH;AAED,OAAO,UAAUe,kBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACI,eAAe,CAACwB,gBAAjB,CAAhB;AACH;AAED,OAAO,UAAUC,SAAV,GAAsB;AAAE;AAC3B,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACsB,mBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from \"./user.types\";\n\nimport { auth, googleProvider, createUserProfileDocument} from \"../../firebase/firebase.utils\";\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure} from \"./user.actions\";\n\nexport function* signInWithGoogle() {\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider); //this will return an obj // but we only want the user property of it/\n        const userRef = yield call(createUserProfileDocument, user); //again, this is the same as >> const userRef = yield creatUserProfileDocument(user)\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    }catch (error) {\n        yield put(googleSignInFailure(error))\n    }\n}\n\nexport function* signInWithEmail({payload: { email, password }}) {\n    try {\n        \n    }catch (error) {}\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_START)\n}\n\nexport function* userSagas() { //collection of all the userSagas to put in root-saga\n    yield all([call(onGoogleSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}