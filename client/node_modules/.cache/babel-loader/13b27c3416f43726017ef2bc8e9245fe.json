{"ast":null,"code":"import _defineProperty from\"/home/maxwell/Desktop/crown-clothings/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/home/maxwell/Desktop/crown-clothings/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/maxwell/Desktop/crown-clothings/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/maxwell/Desktop/crown-clothings/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState}from'react';import{connect}from'react-redux';import'./sign-in.styles.scss';import FormInput from\"../formInput/formInput.component\";import CustomButton from\"../custom-button/custom-button.component\";import{googleSignInStart as _googleSignInStart,emailSignInStart as _emailSignInStart}from\"../../redux/user/user.actions\";var SignIn=function SignIn(_ref){var googleSignInStart=_ref.googleSignInStart,emailSignInStart=_ref.emailSignInStart;//using hooks\nvar _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),useCredentials=_useState2[0],setCredentials=_useState2[1];var email=useCredentials.email,password=useCredentials.password;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();emailSignInStart(email,password);case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;//if email, name=email and value = event.target.value\nsetCredentials(_objectSpread({},useCredentials,_defineProperty({},name,value)));//to be able to use variable as object property //we need to spread in other props because we're only changing one props\n};return React.createElement(\"div\",{className:\"sign-in\"},React.createElement(\"h2\",{className:\"title\"},\"I already have an account\"),React.createElement(\"span\",null,\"Sign in with your email and password\"),React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(FormInput,{name:\"email\",type:\"email\",value:email//setting the value as the state//whenever you input the value it'll update the state\n,handleChange:handleChange,label:\"Email\",required:true}),React.createElement(FormInput,{name:\"password\",type:\"password\",value:password,handleChange:handleChange,label:\"Password\",required:true}),React.createElement(\"div\",{className:\"buttons\"},React.createElement(CustomButton,{type:\"submit\"},\"Sign In \"),React.createElement(CustomButton,{type:\"button\",onClick:googleSignInStart,isGoogleSignIn:true},\"Sign In With Google\"),\" \")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{googleSignInStart:function googleSignInStart(){return dispatch(_googleSignInStart());},emailSignInStart:function emailSignInStart(email,password){return dispatch(_emailSignInStart({email:email,password:password}));}};};export default connect(null,mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/client/src/components/signin/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","useCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"u5CAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAO,uBAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,kCAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CACA,OAASC,iBAAiB,GAAjBA,CAAAA,kBAAT,CAA4BC,gBAAgB,GAAhBA,CAAAA,iBAA5B,KAAoD,+BAApD,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA2C,IAAzCF,CAAAA,iBAAyC,MAAzCA,iBAAyC,CAAtBC,gBAAsB,MAAtBA,gBAAsB,CAAE;AAAF,cACbL,QAAQ,CAAC,CAACO,KAAK,CAAE,EAAR,CAAYC,QAAQ,CAAE,EAAtB,CAAD,CADK,wCAC/CC,cAD+C,eAC/BC,cAD+B,kBAE/CH,CAAAA,KAF+C,CAE5BE,cAF4B,CAE/CF,KAF+C,CAExCC,QAFwC,CAE5BC,cAF4B,CAExCD,QAFwC,CAItD,GAAMG,CAAAA,YAAY,2FAAG,iBAAMC,KAAN,kHACjBA,KAAK,CAACC,cAAN,GACAR,gBAAgB,CAACE,KAAD,CAAQC,QAAR,CAAhB,CAFiB,sDAAH,kBAAZG,CAAAA,YAAY,6CAAlB,CAKA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAF,KAAK,CAAI,mBACLA,KAAK,CAACG,MADD,CACnBC,KADmB,eACnBA,KADmB,CACbC,IADa,eACbA,IADa,CACS;AAEnCP,cAAc,kBAAKD,cAAL,oBAAsBQ,IAAtB,CAA6BD,KAA7B,GAAd,CAAoD;AACvD,CAJD,CAOA,MACI,4BAAK,SAAS,CAAC,SAAf,EACI,0BAAI,SAAS,CAAC,OAAd,8BADJ,CAEI,uEAFJ,CAII,4BAAM,QAAQ,CAAEL,YAAhB,EACI,oBAAC,SAAD,EACO,IAAI,CAAC,OADZ,CAEO,IAAI,CAAC,OAFZ,CAGO,KAAK,CAAEJ,KAAO;AAHrB,CAIO,YAAY,CAAEO,YAJrB,CAKO,KAAK,CAAC,OALb,CAMO,QAAQ,KANf,EADJ,CAQI,oBAAC,SAAD,EACI,IAAI,CAAC,UADT,CAEI,IAAI,CAAC,UAFT,CAGI,KAAK,CAAEN,QAHX,CAII,YAAY,CAAEM,YAJlB,CAKI,KAAK,CAAC,UALV,CAMI,QAAQ,KANZ,EARJ,CAeI,2BAAK,SAAS,CAAC,SAAf,EACI,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,aADJ,CAEI,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,CAA4B,OAAO,CAAEV,iBAArC,CAAwD,cAAc,KAAtE,wBAFJ,KAfJ,CAJJ,CADJ,CA2BH,CA3CD,CA6CA,GAAMc,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpCf,iBAAiB,CAAE,mCAAMe,CAAAA,QAAQ,CAACf,kBAAiB,EAAlB,CAAd,EADiB,CAEpCC,gBAAgB,CAAE,0BAACE,KAAD,CAAOC,QAAP,QAAoBW,CAAAA,QAAQ,CAACd,iBAAgB,CAAC,CAACE,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAD,CAAjB,CAA5B,EAFkB,CAAL,EAAnC,CAKA,cAAeP,CAAAA,OAAO,CAAC,IAAD,CAAOiB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, {useState} from 'react'\n\nimport { connect } from 'react-redux'\nimport './sign-in.styles.scss'\nimport FormInput from \"../formInput/formInput.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\n\nconst SignIn = ({googleSignInStart, emailSignInStart}) => { //using hooks\n    const [useCredentials, setCredentials] = useState({email: '', password: ''});\n    const {email, password} = useCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        emailSignInStart(email, password)\n    };\n\n    const handleChange = event => {\n        const {value,name} = event.target; //if email, name=email and value = event.target.value\n\n        setCredentials({...useCredentials, [name]: value}); //to be able to use variable as object property //we need to spread in other props because we're only changing one props\n    };\n\n\n    return(\n        <div className='sign-in'>\n            <h2 className='title'>I already have an account</h2>\n            <span>Sign in with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                       name='email'\n                       type='email'\n                       value={email} //setting the value as the state//whenever you input the value it'll update the state\n                       handleChange={handleChange}\n                       label='Email'\n                       required />\n                <FormInput\n                    name='password'\n                    type='password'\n                    value={password}\n                    handleChange={handleChange}\n                    label='Password'\n                    required />\n                <div className='buttons'>\n                    <CustomButton type='submit'>Sign In </CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign In With Google</CustomButton> {/*if we didn't specify type=button everything we click that button form submit will occur*/}\n                </div>\n            </form>\n        </div>\n    )\n};\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email,password) => dispatch(emailSignInStart({email, password}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}