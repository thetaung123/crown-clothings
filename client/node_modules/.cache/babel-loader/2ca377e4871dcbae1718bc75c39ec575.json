{"ast":null,"code":"var _jsxFileName = \"/home/maxwell/Desktop/crown-clothings/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { connect } from 'react-redux';\nimport { UpdateCollections } from \"../../redux/shop/shop.actions\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview); //withSpinner will pass isLoading props to the component\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //we don't need to call constructor, if we do it like this.\n      loading: true\n    };\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match; //one of the three props Route passed into ShopPage in App.js\n\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), \" \");\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(UpdateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","WithSpinner","firestore","convertCollectionSnapshotToMap","connect","UpdateCollections","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unSubscribeFromSnapshot","componentDidMount","updateCollections","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,6BAA6B,GAAGL,WAAW,CAACF,mBAAD,CAAjD,C,CAAwE;;AACxE,MAAMQ,yBAAyB,GAAGN,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAOQ,QAAP,SAAwBX,KAAK,CAACY,SAA9B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AAAE;AACNC,MAAAA,OAAO,EAAE;AADL,KAF2B;AAAA,SAOnCC,uBAPmC,GAOT,IAPS;AAAA;;AASnCC,EAAAA,iBAAiB,GAAG;AAAA,UACTC,iBADS,GACa,KAAKC,KADlB,CACTD,iBADS;AAEhB,UAAME,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,aAAa,GAAGjB,8BAA8B,CAACgB,QAAD,CAApD;AACAL,MAAAA,iBAAiB,CAACM,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJD;AAKH;;AAEDW,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKR,KADlB,CACGQ,KADH,EACyB;;AAC9B,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEzB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKwB,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAExB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,MADJ;AAMH;;AA5BkC;;AAiCvC,MAAMyB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCZ,EAAAA,iBAAiB,EAAEM,aAAa,IAAIM,QAAQ,CAACrB,iBAAiB,CAACe,aAAD,CAAlB;AADR,CAAL,CAAnC;;AAIA,eAAehB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom'\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\n\nimport CollectionPage from \"../collection/collection.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nimport {firestore, convertCollectionSnapshotToMap} from \"../../firebase/firebase.utils\";\nimport { connect } from 'react-redux';\nimport { UpdateCollections } from \"../../redux/shop/shop.actions\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview); //withSpinner will pass isLoading props to the component\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass  ShopPage extends React.Component{\n\n    state = { //we don't need to call constructor, if we do it like this.\n        loading: true\n    };\n\n\n    unSubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const {updateCollections } = this.props;\n        const collectionRef = firestore.collection('collections');\n\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionMap = convertCollectionSnapshotToMap(snapshot);\n            updateCollections(collectionMap);\n            this.setState({loading: false})\n        })\n    }\n\n    render() {\n        const { match } = this.props; //one of the three props Route passed into ShopPage in App.js\n        return(\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} component={CollectionsOverview} />\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage}/> {/*if we want to make the url varying we don't want to make Route of ShopPage *exact* */}\n            </div>\n        )\n    }\n\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionMap => dispatch(UpdateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}