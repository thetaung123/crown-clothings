{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; //local storage\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopReducer from \"./shop/shop.reducer\"; // const persistConfig = {\n//     key: 'root',\n//     storage, //local storage\n//     whiteList: ['cart'] //must be exported name from combineReducers// eg. if we want to persist userReducer , we'll also add 'user'\n// };\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n});\nexport default rootReducer; //this will return modified version of rootReducer with storage persistence\n//this is can be imported by connect()()","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","shopReducer","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,SAASA,eAAT,QAA+B,OAA/B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,WAAP,MAAwB,qBAAxB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAChCQ,EAAAA,IAAI,EAAEL,WAD0B;AAEhCM,EAAAA,IAAI,EAAEL,WAF0B;AAGhCM,EAAAA,SAAS,EAAEL,gBAHqB;AAIhCM,EAAAA,IAAI,EAAEL;AAJ0B,CAAD,CAAnC;AAOA,eAAeC,WAAf,C,CAA4B;AAC5B","sourcesContent":["import { combineReducers} from \"redux\";\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; //local storage\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopReducer from \"./shop/shop.reducer\";\n\n// const persistConfig = {\n//     key: 'root',\n//     storage, //local storage\n//     whiteList: ['cart'] //must be exported name from combineReducers// eg. if we want to persist userReducer , we'll also add 'user'\n// };\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    cart: cartReducer,\n    directory: directoryReducer,\n    shop: shopReducer\n});\n\nexport default rootReducer; //this will return modified version of rootReducer with storage persistence\n//this is can be imported by connect()()"]},"metadata":{},"sourceType":"module"}