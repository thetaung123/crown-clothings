{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport ShopActionTypes from \"./shop.types\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nexport function* fetchCollectionsAsync() {\n  //using generator function\n  // yield console.log('I am fired')\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef;\n  } catch (errorMessage) {}\n}\nexport function* fetchCollectionsStart() {\n  //this function is for using in redux store // to use in redux component, we write redux actions with the same action type specified here, names doesn't necessarily need to match, only action types matters**// which we usually write in our actions file\n  yield takeEvery( //takeEvery use non-blocking calls // and if an action gets fired multiple times// this cancels the first ones and only run the last action // it can cancel actions because of yields\n  ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/redux/shop/shop.sagas.js"],"names":["takeEvery","put","call","ShopActionTypes","firestore","fetchCollectionsAsync","collectionRef","collection","snapShot","errorMessage","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,QAAwB,+BAAxB;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AAAE;AACvC;AACA,MAAG;AACC,UAAMC,aAAa,GAAGF,SAAS,CAACG,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAvB;AACH,GAHD,CAGC,OAAOG,YAAP,EAAqB,CAErB;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AAAE;AACvC,QAAMV,SAAS,EAAE;AACbG,EAAAA,eAAe,CAACQ,uBADL,EAEXN,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects'\nimport ShopActionTypes from \"./shop.types\";\nimport {firestore} from \"../../firebase/firebase.utils\";\n\nexport function* fetchCollectionsAsync() { //using generator function\n    // yield console.log('I am fired')\n    try{\n        const collectionRef = firestore.collection('collections');\n        const snapShot = yield collectionRef;\n    }catch (errorMessage) {\n\n    }\n}\n\nexport function* fetchCollectionsStart() { //this function is for using in redux store // to use in redux component, we write redux actions with the same action type specified here, names doesn't necessarily need to match, only action types matters**// which we usually write in our actions file\n    yield takeEvery( //takeEvery use non-blocking calls // and if an action gets fired multiple times// this cancels the first ones and only run the last action // it can cancel actions because of yields\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    )\n}"]},"metadata":{},"sourceType":"module"}