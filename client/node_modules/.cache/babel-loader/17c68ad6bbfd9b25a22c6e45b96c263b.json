{"ast":null,"code":"import _defineProperty from \"/home/maxwell/Desktop/crown-clothings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCwyHQFh0fhhnmS-RHhYhrfQLbuN--yq3E\",\n  authDomain: \"crown-db-38284.firebaseapp.com\",\n  databaseURL: \"https://crown-db-38284.firebaseio.com\",\n  projectId: \"crown-db-38284\",\n  storageBucket: \"crown-db-38284.appspot.com\",\n  messagingSenderId: \"282105219809\",\n  appId: \"1:282105219809:web:53736acaac824bf33145a0\",\n  measurementId: \"G-9R9FJ5PEL4\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid)); //we're gonna use uid as id\n\n  const snapShot = await userRef.get(); //when you use get method you get back a snapShot Doc. //checking if the user exists\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {}\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,WAAW,EAAE,uCAHF;AAIXC,EAAAA,SAAS,EAAE,gBAJA;AAKXC,EAAAA,aAAa,EAAE,4BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB,CAHyE,CAGjB;;AACxD,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CAJyE,CAInC;;AAEtC,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAAA,UACTC,WADS,GACaT,QADb,CACTS,WADS;AAAA,UACIC,KADJ,GACaV,QADb,CACIU,KADJ;AAEhB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR;AACFJ,QAAAA,WADE;AAEFC,QAAAA,KAFE;AAGFC,QAAAA;AAHE,SAICV,cAJD,EAAN;AAMH,KAPD,CAOC,OAAOa,KAAP,EAAc,CAEd;AACJ;AACJ,CArBM;AAuBPzB,QAAQ,CAAC0B,aAAT,CAAuBzB,MAAvB;AAEA,OAAO,MAAM0B,IAAI,GAAG3B,QAAQ,CAAC2B,IAAT,EAAb;AACP,OAAO,MAAMb,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMc,QAAQ,GAAG,IAAI5B,QAAQ,CAAC2B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe5B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyCwyHQFh0fhhnmS-RHhYhrfQLbuN--yq3E\",\n    authDomain: \"crown-db-38284.firebaseapp.com\",\n    databaseURL: \"https://crown-db-38284.firebaseio.com\",\n    projectId: \"crown-db-38284\",\n    storageBucket: \"crown-db-38284.appspot.com\",\n    messagingSenderId: \"282105219809\",\n    appId: \"1:282105219809:web:53736acaac824bf33145a0\",\n    measurementId: \"G-9R9FJ5PEL4\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`); //we're gonna use uid as id\n    const snapShot = await userRef.get(); //when you use get method you get back a snapShot Doc. //checking if the user exists\n\n    if(!snapShot.exists){\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        }catch (error) {\n\n        }\n    }\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}