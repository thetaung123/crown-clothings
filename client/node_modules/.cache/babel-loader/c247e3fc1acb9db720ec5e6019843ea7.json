{"ast":null,"code":"var _jsxFileName = \"/home/maxwell/Desktop/crown-clothings/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { connect } from 'react-redux';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      console.log(collectionMap);\n    });\n  }\n\n  render() {\n    const match = this.props.match; //one of the three props Route passed into ShopPage in App.js\n\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), \" \");\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","firestore","convertCollectionSnapshotToMap","connect","ShopPage","Component","unSubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionMap","console","log","render","match","props","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAOC,QAAP,SAAwBP,KAAK,CAACQ,SAA9B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,uBAFmC,GAET,IAFS;AAAA;;AAInCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,aAAa,GAAGV,8BAA8B,CAACS,QAAD,CAApD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACH,KAHD;AAIH;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKC,KADlB,CACGD,KADH,EACyB;;AAC9B,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACE,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEnB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKiB,KAAK,CAACE,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAElB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,MADJ;AAMH;;AArBkC;;AA0BvC,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK,EAAL,CAAnC;;AAIA,eAAehB,QAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom'\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\n\nimport CollectionPage from \"../collection/collection.component\";\n\nimport {firestore, convertCollectionSnapshotToMap} from \"../../firebase/firebase.utils\";\nimport { connect } from 'react-redux';\n\nclass  ShopPage extends React.Component{\n\n    unSubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const collectionRef = firestore.collection('collections');\n\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionMap = convertCollectionSnapshotToMap(snapshot);\n            console.log(collectionMap)\n        })\n    }\n\n    render() {\n        const { match } = this.props; //one of the three props Route passed into ShopPage in App.js\n        return(\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} component={CollectionsOverview} />\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage}/> {/*if we want to make the url varying we don't want to make Route of ShopPage *exact* */}\n            </div>\n        )\n    }\n\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    \n})\n\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}