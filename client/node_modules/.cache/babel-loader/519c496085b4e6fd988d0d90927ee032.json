{"ast":null,"code":"import _regeneratorRuntime from\"/home/maxwell/Desktop/crown-clothings/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/home/maxwell/Desktop/crown-clothings/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"/home/maxwell/Desktop/crown-clothings/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyCwyHQFh0fhhnmS-RHhYhrfQLbuN--yq3E\",authDomain:\"crown-db-38284.firebaseapp.com\",databaseURL:\"https://crown-db-38284.firebaseio.com\",projectId:\"crown-db-38284\",storageBucket:\"crown-db-38284.appspot.com\",messagingSenderId:\"282105219809\",appId:\"1:282105219809:web:53736acaac824bf33145a0\",measurementId:\"G-9R9FJ5PEL4\"};firebase.initializeApp(config);export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));//we're gonna use uid as id\n_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();//if the user doesn't exit, this'll create a new user\n_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0://for was created for adding shop data into firebase\ncollectionRef=firestore.collection(collectionKey);//finding collectionRef in firestore\nbatch=firestore.batch();//normally we can't request multiple set request at the same time, so, we need to use batch property\nobjectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();//creating collectionRef with random id firestore gives\nbatch.set(newDocRef,obj);});_context2.next=5;return batch.commit();case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var convertCollectionSnapshotToMap=function convertCollectionSnapshotToMap(collections){var transformedCollections=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),//javascript method that convert any string into url format\nid:doc.id,title:title,items:items};});// console.log(transformedCollections);\nreturn transformedCollections.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;//changing accumulator's key value into collection title and setting its property into each collection// we're making it look like our shop data\nreturn accumulator;},{});};export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){//for sagas to yield // sagas need promises to yield remember\nvar unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","collections","transformedCollections","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"ovCAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,MAAM,CAAE,yCADG,CAEXC,UAAU,CAAE,gCAFD,CAGXC,WAAW,CAAE,uCAHF,CAIXC,SAAS,CAAE,gBAJA,CAKXC,aAAa,CAAE,4BALJ,CAMXC,iBAAiB,CAAE,cANR,CAOXC,KAAK,CAAE,2CAPI,CAQXC,aAAa,CAAE,cARJ,CAAf,CAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,EAGA,MAAO,IAAMU,CAAAA,yBAAyB,0FAAG,iBAAOC,QAAP,CAAiBC,cAAjB,sKACjCD,QADiC,iEAG/BE,OAH+B,CAGrBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAHqB,CAGmB;AAHnB,sBAIdH,CAAAA,OAAO,CAACI,GAAR,EAJc,QAI/BC,QAJ+B,kBAMjCA,QAAQ,CAACC,MANwB,0BAO1BC,WAP0B,CAOJT,QAPI,CAO1BS,WAP0B,CAObC,KAPa,CAOJV,QAPI,CAObU,KAPa,CAQ3BC,SAR2B,CAQf,GAAIC,CAAAA,IAAJ,EARe,CASjC;AATiC,uCAWvBV,CAAAA,OAAO,CAACW,GAAR,gBACFJ,WAAW,CAAXA,WADE,CAEFC,KAAK,CAALA,KAFE,CAGFC,SAAS,CAATA,SAHE,EAICV,cAJD,EAXuB,0FAkB7Ba,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAkC,YAAMC,OAAxC,EAlB6B,wCAqB9Bd,OArB8B,uEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CAwBP,MAAO,IAAMkB,CAAAA,yBAAyB,2FAAG,kBAAOC,aAAP,CAAsBC,YAAtB,8IAAyC;AAC1EC,aADiC,CACjBjB,SAAS,CAACkB,UAAV,CAAqBH,aAArB,CADiB,CACoB;AAErDI,KAHiC,CAGzBnB,SAAS,CAACmB,KAAV,EAHyB,CAGN;AAEjCH,YAAY,CAACI,OAAb,CAAqB,SAAAC,GAAG,CAAI,CACxB,GAAMC,CAAAA,SAAS,CAAGL,aAAa,CAAChB,GAAd,EAAlB,CAAuC;AACvCkB,KAAK,CAACT,GAAN,CAAUY,SAAV,CAAqBD,GAArB,EACH,CAHD,EALuC,uBAS/BF,CAAAA,KAAK,CAACI,MAAN,EAT+B,yDAAH,kBAAzBT,CAAAA,yBAAyB,kDAA/B,CAaP,MAAO,IAAMU,CAAAA,8BAA8B,CAAG,QAAjCA,CAAAA,8BAAiC,CAACC,WAAD,CAAiB,CAC7D,GAAMC,CAAAA,sBAAsB,CAAID,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAqB,SAAA3B,GAAG,CAAI,eACjCA,GAAG,CAAC4B,IAAJ,EADiC,CACjDC,KADiD,WACjDA,KADiD,CAC1CC,KAD0C,WAC1CA,KAD0C,CAExD,MAAO,CACHC,SAAS,CAAEC,SAAS,CAACH,KAAK,CAACI,WAAN,EAAD,CADjB,CACwC;AAC3CC,EAAE,CAAElC,GAAG,CAACkC,EAFL,CAGHL,KAAK,CAALA,KAHG,CAIHC,KAAK,CAALA,KAJG,CAAP,CAMH,CAR+B,CAAhC,CASA;AAEE,MAAOL,CAAAA,sBAAsB,CAACU,MAAvB,CAA8B,SAACC,WAAD,CAAcnB,UAAd,CAA6B,CAC9DmB,WAAW,CAACnB,UAAU,CAACY,KAAX,CAAiBI,WAAjB,EAAD,CAAX,CAA8ChB,UAA9C,CAA0D;AAC1D,MAAOmB,CAAAA,WAAP,CACH,CAHM,CAGL,EAHK,CAAP,CAIH,CAhBM,CAkBP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAChC,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAAEC,OAAF,CAAWC,MAAX,CAAsB,CAAE;AACvC,GAAMC,CAAAA,WAAW,CAAGC,IAAI,CAACC,kBAAL,CAAwB,SAAA/C,QAAQ,CAAI,CACpD6C,WAAW,GACXF,OAAO,CAAC3C,QAAD,CAAP,CACH,CAHmB,CAGjB4C,MAHiB,CAApB,CAIH,CALM,CAAP,CAMH,CAPM,CASP,MAAO,IAAME,CAAAA,IAAI,CAAG1D,QAAQ,CAAC0D,IAAT,EAAb,CACP,MAAO,IAAM3C,CAAAA,SAAS,CAAGf,QAAQ,CAACe,SAAT,EAAlB,CAEP,MAAO,IAAM6C,CAAAA,cAAc,CAAG,GAAI5D,CAAAA,QAAQ,CAAC0D,IAAT,CAAcG,kBAAlB,EAAvB,CACPD,cAAc,CAACE,mBAAf,CAAmC,CAACC,MAAM,CAAE,gBAAT,CAAnC,EACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAMN,CAAAA,IAAI,CAACO,eAAL,CAAqBL,cAArB,CAAN,EAAzB,CAEP,cAAe5D,CAAAA,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyCwyHQFh0fhhnmS-RHhYhrfQLbuN--yq3E\",\n    authDomain: \"crown-db-38284.firebaseapp.com\",\n    databaseURL: \"https://crown-db-38284.firebaseio.com\",\n    projectId: \"crown-db-38284\",\n    storageBucket: \"crown-db-38284.appspot.com\",\n    messagingSenderId: \"282105219809\",\n    appId: \"1:282105219809:web:53736acaac824bf33145a0\",\n    measurementId: \"G-9R9FJ5PEL4\"\n};\n\nfirebase.initializeApp(config);\n\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`); //we're gonna use uid as id\n    const snapShot = await userRef.get(); //when you use get method you get back a snapShot Doc. //checking if the user exists\n\n    if(!snapShot.exists){\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n        //if the user doesn't exit, this'll create a new user\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        }catch (error) {\n            console.log('error creating user',error.message);\n        }\n    }\n    return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => { //for was created for adding shop data into firebase\n  const collectionRef = firestore.collection(collectionKey); //finding collectionRef in firestore\n\n  const batch = firestore.batch(); //normally we can't request multiple set request at the same time, so, we need to use batch property\n\n  objectsToAdd.forEach(obj => {\n      const newDocRef = collectionRef.doc(); //creating collectionRef with random id firestore gives\n      batch.set(newDocRef, obj);\n  });\n    await batch.commit(); //committing our created collection\n\n};\n\nexport const convertCollectionSnapshotToMap = (collections) => {\n  const transformedCollections =  collections.docs.map(doc => {\n      const {title, items} = doc.data();\n      return {\n          routeName: encodeURI(title.toLowerCase()), //javascript method that convert any string into url format\n          id: doc.id,\n          title,\n          items\n      }\n  });\n  // console.log(transformedCollections);\n\n    return transformedCollections.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()] = collection; //changing accumulator's key value into collection title and setting its property into each collection// we're making it look like our shop data\n        return accumulator;\n    },{})\n};\n\nexport const getCurrentUser = () => {\n    return new Promise(( resolve, reject) => { //for sagas to yield // sagas need promises to yield remember\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\n            unsubscribe();\n            resolve(userAuth)\n        }, reject)\n    })\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}