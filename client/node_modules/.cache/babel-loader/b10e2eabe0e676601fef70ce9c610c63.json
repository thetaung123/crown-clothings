{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user; //this will return userRef obj // but we only want user property of it\n    //console.log(userRef)\n\n  } catch (error) {}\n}\nexport function* onGoogleSignStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  //collection of all the userSagas to put in root-saga\n  yield all([call(onGoogleSignStart)]);\n}","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","error","onGoogleSignStart","GOOGLE_SIGN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAA+D,+BAA/D;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAG;AAAA,iBACgB,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADtB;AAAA,UACQI,IADR,QACQA,IADR,EAC4D;AAC3D;;AACH,GAHD,CAGC,OAAOC,KAAP,EAAc,CAEd;AACJ;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACjC,QAAMZ,UAAU,CAACI,eAAe,CAACS,iBAAjB,EAAoCL,gBAApC,CAAhB;AACH;AAED,OAAO,UAAUM,SAAV,GAAsB;AAAE;AAC3B,QAAMZ,GAAG,CAAC,CAACC,IAAI,CAACS,iBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from \"./user.types\";\n\nimport { auth, googleProvider, createUserProfileDocument} from \"../../firebase/firebase.utils\";\n\nexport function* signInWithGoogle() {\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider); //this will return userRef obj // but we only want user property of it\n        //console.log(userRef)\n    }catch (error) {\n\n    }\n}\n\nexport function* onGoogleSignStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_START, signInWithGoogle)\n}\n\nexport function* userSagas() { //collection of all the userSagas to put in root-saga\n    yield all([call(onGoogleSignStart)])\n}"]},"metadata":{},"sourceType":"module"}