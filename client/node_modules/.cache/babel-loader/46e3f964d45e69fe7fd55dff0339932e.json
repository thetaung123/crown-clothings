{"ast":null,"code":"var _jsxFileName = \"/home/maxwell/Desktop/crown-clothings/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  // componentDidMount() {\n  //     const { fetchCollectionsStartAsync } = this.props;\n  //     fetchCollectionsStartAsync(); //using redux-thunk //this is async request\n  // }\n  useEffect(() => {\n    fetchCollectionsStart(); //using redux-saga\n  }, []); //const { match } = this.props; //one of the three props Route passed into ShopPage in App.js\n\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  //with saga\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()) //*******\n\n}); // const mapDispatchToProps = dispatch => ({//with thunk\n//     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()) //*******\n// });\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","CollectionsOverviewContainer","CollectionPageContainer","connect","fetchCollectionsStart","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;;AAEA,MAAOC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQF,EAAAA;AAAR,CAAD,KAAoC;AAElD;AACA;AACA;AACA;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,qBAAqB,GADT,CACa;AAC5B,GAFQ,EAEN,EAFM,CAAT,CANkD,CAUlD;;AACA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,YAAKE,KAAK,CAACC,IAAX,CAAjB;AACO,IAAA,SAAS,EAAEN,4BADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,KAAD;AAAO,IAAA,IAAI,YAAKK,KAAK,CAACC,IAAX,mBAAX;AACO,IAAA,SAAS,EAAEL,uBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAWH,CAtBD;;AAuBA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AAAC;AACrCL,EAAAA,qBAAqB,EAAE,MAAMK,QAAQ,CAACL,qBAAqB,EAAtB,CADD,CAC2B;;AAD3B,CAAL,CAAnC,C,CAIA;AACA;AACA;;;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAOK,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\n\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n\nconst  ShopPage = ({match, fetchCollectionsStart}) => {\n\n    // componentDidMount() {\n    //     const { fetchCollectionsStartAsync } = this.props;\n    //     fetchCollectionsStartAsync(); //using redux-thunk //this is async request\n    // }\n    useEffect(() => {\n        fetchCollectionsStart(); //using redux-saga\n    }, []);\n\n    //const { match } = this.props; //one of the three props Route passed into ShopPage in App.js\n    return(\n        <div className='shop-page'>\n            <Route exact path={`${match.path}`}\n                   component={CollectionsOverviewContainer} />\n            {/*<Route path={`${match.path}/:collectionId`}*/}\n            {/*       render={(props) => <CollectionPageWithSpinner //this doesn't work with isCollectionFetching because the value we get for that is async request inside of componentdidmount which runs after render method, so, the state of fetching is only updated after we rendered the components,so, the loading doesn't appear*/}\n            {/*           isLoading={!isCollectionsLoaded} {...props} /> }/> /!*if we want to make the url varying we don't want to make Route of ShopPage *exact* *!/*/}\n            <Route path={`${match.path}/:collectionId`}\n                   component={CollectionPageContainer} />\n        </div>\n    )\n};\nconst mapDispatchToProps = dispatch => ({//with saga\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart()) //*******\n});\n\n// const mapDispatchToProps = dispatch => ({//with thunk\n//     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()) //*******\n// });\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}