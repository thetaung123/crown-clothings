{"ast":null,"code":"import _defineProperty from \"/home/maxwell/Desktop/crown-clothings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/maxwell/Desktop/crown-clothings/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Homepage from \"./pages/homepage/Homepage.components\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignUpAndSignInPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { setCurrentUser } from \"./redux/user/user.action\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.HatsPage = () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Hats Page\"));\n\n    this.unSubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const a = this.props.a;\n    this.unSubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); //userRef getting back by sending userAuth from createUserProfileDocument method we created which is all the information of the user logged in\n\n        userRef.onSnapshot(snapShot => {\n          //getting user's data\n          //console.log(snapShot.data()); //snapShot.data gives back all the information stored in for the user in database\n          a(_objectSpread({\n            id: snapShot.id\n          }, snapShot.data())); // console.log(this.state)\n        });\n      } else {\n        a(userAuth); //if the user failed to sign in userAuth is the same as null\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unSubscribeFromAuth(); //to prevent memory leaks// when we unmount our app, we want to clear auth // this is not equal to signOur\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" \", React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Homepage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/hats\",\n      component: this.HatsPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      component: SignUpAndSignInPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  a: user => dispatch(setCurrentUser(user)) //setCurrentUser receives a user\n\n});\n\nexport default connect(null, mapDispatchToProps)(App); //by doing this App.js receives a prop call setCurrentUser\n//connect accepts to arguments: mapStateToProps and mapDispatchToProps // mapStateToProps is for the components that need the value of the state // Dispatch is for components that need to change the state but don't use it","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/App.js"],"names":["React","Switch","Route","connect","Homepage","ShopPage","Header","SignUpAndSignInPage","auth","createUserProfileDocument","setCurrentUser","App","Component","HatsPage","unSubscribeFromAuth","componentDidMount","a","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","mapDispatchToProps","dispatch","user"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAeC,KAAf,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AAEA,SAAQC,IAAR,EAAcC,yBAAd,QAA8C,2BAA9C;AACA,SAAQC,cAAR,QAA6B,0BAA7B;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAE9BC,QAF8B,GAEnB,MACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAH0B;;AAAA,SAO9BC,mBAP8B,GAOR,IAPQ;AAAA;;AAQ9BC,EAAAA,iBAAiB,GAAG;AAAA,UACTC,CADS,GACJ,KAAKC,KADD,CACTD,CADS;AAGhB,SAAKF,mBAAL,GAA2BN,IAAI,CAACU,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACjE,UAAIA,QAAJ,EAAa;AACT,cAAMC,OAAO,GAAG,MAAMX,yBAAyB,CAACU,QAAD,CAA/C,CADS,CACkD;;AAE3DC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAAE;AAC7B;AACAN,UAAAA,CAAC;AACOO,YAAAA,EAAE,EAAED,QAAQ,CAACC;AADpB,aAEUD,QAAQ,CAACE,IAAT,EAFV,EAAD,CAF2B,CAO3B;AACH,SARD;AASH,OAZD,MAYM;AACFR,QAAAA,CAAC,CAACG,QAAD,CAAD,CADE,CACW;AAChB;AACJ,KAhB0B,CAA3B;AAiBH;;AAEDM,EAAAA,oBAAoB,GAAG;AACnB,SAAKX,mBAAL,GADmB,CACS;AAC/B;;AAEDY,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEtB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAE,KAAKS,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAER,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,SAAS,EAAEE,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,CADJ;AAYH;;AA/C6B;;AAkDlC,MAAMoB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCZ,EAAAA,CAAC,EAAEa,IAAI,IAAID,QAAQ,CAAClB,cAAc,CAACmB,IAAD,CAAf,CADiB,CACM;;AADN,CAAL,CAAnC;;AAIA,eAAe1B,OAAO,CAAC,IAAD,EAAMwB,kBAAN,CAAP,CAAiChB,GAAjC,CAAf,C,CAAsD;AACtD","sourcesContent":["import React from 'react';\nimport {Switch,Route} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './App.css';\nimport Homepage from \"./pages/homepage/Homepage.components\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignUpAndSignInPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\n\nimport {auth, createUserProfileDocument} from \"./firebase/firebase.utils\";\nimport {setCurrentUser} from \"./redux/user/user.action\";\n\nclass App extends React.Component {\n\n    HatsPage = () => (\n        <div>\n            <h1>Hats Page</h1>\n        </div>\n    );\n    unSubscribeFromAuth = null;\n    componentDidMount() {\n        const {a} = this.props;\n\n        this.unSubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n            if (userAuth){\n                const userRef = await createUserProfileDocument(userAuth); //userRef getting back by sending userAuth from createUserProfileDocument method we created which is all the information of the user logged in\n\n                userRef.onSnapshot(snapShot => { //getting user's data\n                    //console.log(snapShot.data()); //snapShot.data gives back all the information stored in for the user in database\n                    a({\n                            id: snapShot.id, //id is not in the snapShot.data()\n                            ...snapShot.data()\n                        }\n                    );\n                    // console.log(this.state)\n                })\n            }else {\n                a(userAuth); //if the user failed to sign in userAuth is the same as null\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.unSubscribeFromAuth(); //to prevent memory leaks// when we unmount our app, we want to clear auth // this is not equal to signOur\n    }\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <Switch> {/*switch render the first component the path matches and ignore the rest */}\n                    <Route exact path='/' component={Homepage}/>\n                    <Route exact path='/hats' component={this.HatsPage}/>\n                    <Route exact path='/shop' component={ShopPage}/>\n                    <Route exact path='/signin' component={SignUpAndSignInPage}/>\n\n                </Switch>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    a: user => dispatch(setCurrentUser(user)) //setCurrentUser receives a user\n});\n\nexport default connect(null,mapDispatchToProps)(App); //by doing this App.js receives a prop call setCurrentUser\n//connect accepts to arguments: mapStateToProps and mapDispatchToProps // mapStateToProps is for the components that need the value of the state // Dispatch is for components that need to change the state but don't use it\n"]},"metadata":{},"sourceType":"module"}