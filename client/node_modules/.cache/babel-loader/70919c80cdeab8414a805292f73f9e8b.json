{"ast":null,"code":"import ShopActionTypes from\"./shop.types\";import{convertCollectionSnapshotToMap,firestore}from\"../../firebase/firebase.utils\";export var fetchCollectionsStart=function fetchCollectionsStart(){return{// if a component use this function, if its action type coincide with a saga, tha t saga will run\ntype:ShopActionTypes.FETCH_COLLECTIONS_START};};export var fetchCollectionsSuccess=function fetchCollectionsSuccess(collectionsMap){return{type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,payload:collectionsMap};};export var fetchCollectionsFailure=function fetchCollectionsFailure(errorMessage){return{type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,payload:errorMessage};};export var fetchCollectionsStartAsync=function fetchCollectionsStartAsync(){//thunk code // not needed now\nreturn function(dispatch){//every time we want to dispatch a function instead of returning an object in redux thunk middleware gets called\nvar collectionRef=firestore.collection('collections');dispatch(fetchCollectionsStart());//can do this because of thunk\ncollectionRef.get().then(function(snapshot){var collectionMap=convertCollectionSnapshotToMap(snapshot);dispatch(fetchCollectionsSuccess(collectionMap));}).catch(function(error){return dispatch(fetchCollectionsFailure(error.message));});};};","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","convertCollectionSnapshotToMap","firestore","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionMap","catch","error","message"],"mappings":"AAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAAQC,8BAAR,CAAwCC,SAAxC,KAAwD,+BAAxD,CAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAO,CAAC;AACzCC,IAAI,CAAEJ,eAAe,CAACK,uBADkB,CAAP,EAA9B,CAIP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,cAAc,QAAK,CACtDH,IAAI,CAAEJ,eAAe,CAACQ,yBADgC,CAEtDC,OAAO,CAAEF,cAF6C,CAAL,EAA9C,CAKP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,YAAY,QAAK,CACpDP,IAAI,CAAEJ,eAAe,CAACY,yBAD8B,CAEpDH,OAAO,CAAEE,YAF2C,CAAL,EAA5C,CAKP,MAAO,IAAME,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,EAAM,CAAE;AAC9C,MAAO,UAAAC,QAAQ,CAAI,CAAC;AAEhB,GAAMC,CAAAA,aAAa,CAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB,CACAF,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CAAkC;AAElCY,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,SAAAC,QAAQ,CAAI,CACjC,GAAMC,CAAAA,aAAa,CAAGnB,8BAA8B,CAACkB,QAAD,CAApD,CACAL,QAAQ,CAACR,uBAAuB,CAACc,aAAD,CAAxB,CAAR,CACH,CAHD,EAIKC,KAJL,CAIW,SAAAC,KAAK,QAAIR,CAAAA,QAAQ,CAACJ,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAAZ,EAJhB,EAKH,CAVD,CAWH,CAZM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {convertCollectionSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({// if a component use this function, if its action type coincide with a saga, tha t saga will run\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = errorMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => { //thunk code // not needed now\n    return dispatch => {//every time we want to dispatch a function instead of returning an object in redux thunk middleware gets called\n\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());//can do this because of thunk\n\n        collectionRef.get().then(snapshot => {\n            const collectionMap = convertCollectionSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionMap));\n        })\n            .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    }\n};\n"]},"metadata":{},"sourceType":"module"}