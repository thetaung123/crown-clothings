{"ast":null,"code":"var _jsxFileName = \"/home/maxwell/Desktop/crown-clothings/src/pages/collection/collection.component.jsx\";\nimport React from 'react';\nimport './collection.styles.scss';\nimport { connect } from 'react-redux';\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\nimport CollectionItem from \"../../components/collection-item/collection-item.components\";\n\nconst CollectionPage = ({\n  collection,\n  match\n}) => {\n  console.log(match.params.collectionId);\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(\"div\", {\n    className: \"collection-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" \", title, \" \"), React.createElement(\"div\", {\n    className: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  //ownProps is second optional parameter which value is the same as this.props //and remember Route always passes in match props\n  collection: selectCollection(ownProps.match.params.collectionId)(state) //now we need to pass in 2 parameters // state is as usual because we didn't use createStructuredSelector // the first parameter is for the first function the selector run i.e the function that receives collectionUrlParam\n\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/pages/collection/collection.component.jsx"],"names":["React","connect","selectCollection","CollectionItem","CollectionPage","collection","match","console","log","params","collectionId","title","items","map","item","id","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,cAAP,MAA2B,6DAA3B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAaC,EAAAA;AAAb,CAAD,KAA0B;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,YAAzB;AAD6C,QAGrCC,KAHqC,GAGpBN,UAHoB,CAGrCM,KAHqC;AAAA,QAG9BC,KAH8B,GAGpBP,UAHoB,CAG9BO,KAH8B;AAI7C,SACA;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAwBD,KAAxB,MADJ,EAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAFR,CAFJ,CADA;AAUH,CAdD;;AAgBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAAE;AAC5Cb,EAAAA,UAAU,EAAEH,gBAAgB,CAACgB,QAAQ,CAACZ,KAAT,CAAeG,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDO,KAArD,CAD8B,CAC8B;;AAD9B,CAAtB,CAAxB;;AAIA,eAAehB,OAAO,CAACe,eAAD,CAAP,CAAyBZ,cAAzB,CAAf","sourcesContent":["import React from 'react';\nimport './collection.styles.scss'\n\nimport { connect } from 'react-redux';\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\nimport CollectionItem from \"../../components/collection-item/collection-item.components\";\n\nconst CollectionPage = ({ collection,match }) => {\n    console.log(match.params.collectionId)\n\n    const { title, items } = collection;\n    return(\n    <div className='collection-page'>\n        <h2 className='title'> {title} </h2>\n        <div className='items'>\n            {\n                items.map(item => <CollectionItem key={item.id} item={item}/>)\n            }\n        </div>\n    </div>\n    )\n};\n\nconst mapStateToProps = (state, ownProps) => ({ //ownProps is second optional parameter which value is the same as this.props //and remember Route always passes in match props\n    collection: selectCollection(ownProps.match.params.collectionId)(state) //now we need to pass in 2 parameters // state is as usual because we didn't use createStructuredSelector // the first parameter is for the first function the selector run i.e the function that receives collectionUrlParam\n});\n\nexport default connect(mapStateToProps)(CollectionPage);"]},"metadata":{},"sourceType":"module"}