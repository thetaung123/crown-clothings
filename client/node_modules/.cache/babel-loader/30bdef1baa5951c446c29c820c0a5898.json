{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], //input selector\ncart => cart.cartItems //output selector\n);\nexport const selectCartItemsCount = createSelector( //without this cart-icon component will rerender every time the state changes\n[selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0) //javascript reduce function // 0 is initial accumulated Quantity\n);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartHidden","hidden","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAC3B;AACbE,IAAI,IAAIA,IAAI,CAACE,SAF2B,CAEhB;AAFgB,CAAtC;AAKP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,EAAE;AAChD,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IAAIA,SAAS,CAACE,MAAV,CACb,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QADrD,EAC+D,CAD/D,CAFiC,CAGiC;AAHjC,CAA3C;AAMP,OAAO,MAAMC,gBAAgB,GAAGX,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACS,MAF6B,CAAvC;AAKP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IAAIA,SAAS,CAACE,MAAV,CACT,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACK,KAD7E,EACoF,CADpF,CAF4B,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart], //input selector\n    (cart => cart.cartItems) //output selector\n);\n\nexport const selectCartItemsCount = createSelector( //without this cart-icon component will rerender every time the state changes\n    [selectCartItems],\n    cartItems => cartItems.reduce(\n    (accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0) //javascript reduce function // 0 is initial accumulated Quantity\n);\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n);\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce(\n        (accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0)\n    );\n"]},"metadata":{},"sourceType":"module"}