{"ast":null,"code":"var _jsxFileName = \"/home/maxwell/Desktop/crown-clothings/src/components/signin/sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from \"../formInput/formInput.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const emailSignInStart = this.props.emailSignInStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name; //if email, name=email and value = event.target.value\n\n      this.setState({\n        [name]: value\n      }); //to be able to use variable as object property\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email //setting the value as the state//whenever you input the value it'll update the state\n      ,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign In \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Sign In With Google\"), \" \")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/maxwell/Desktop/crown-clothings/src/components/signin/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","handleChange","target","value","name","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { connect } from 'react-redux'\nimport './sign-in.styles.scss'\nimport FormInput from \"../formInput/formInput.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\n\nclass SignIn extends React.Component{\n    constructor(props) {\n        super(props);\n            this.state = {\n                email: '',\n                password: ''\n            }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { emailSignInStart } = this.props;\n        const {email, password} = this.state;\n\n        \n\n    };\n\n    handleChange = event => {\n      const {value,name} = event.target; //if email, name=email and value = event.target.value\n\n      this.setState({[name]:value}); //to be able to use variable as object property\n    };\n\n    render() {\n        const { googleSignInStart } = this.props;\n        return(\n            <div className='sign-in'>\n                <h2 className='title'>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                           name='email'\n                           type='email'\n                           value={this.state.email} //setting the value as the state//whenever you input the value it'll update the state\n                           handleChange={this.handleChange}\n                           label='Email'\n                           required />\n                    <FormInput\n                        name='password'\n                        type='password'\n                        value={this.state.password}\n                        handleChange={this.handleChange}\n                        label='Password'\n                        required />\n                    <div className='buttons'>\n                        <CustomButton type='submit'>Sign In </CustomButton>\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign In With Google</CustomButton> {/*if we didn't specify type=button everything we click that button form submit will occur*/}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email,password) => dispatch(emailSignInStart({email, password}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}